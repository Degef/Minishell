rules 							status
Date: 15/07/23 Saturday
1. cmd with one and multiple pipes     ✅
2. cmd with redirection < | > | >>  ✅
3. cat input (if file exit) ✅
4. cat > output  ✅
5. any dublicated redirection should be ignored, take the last ones ✅
6. in bash cmd can read from and write to only one source/destination. ✅
	(can not redirect/get to/from file and pipe at the same time, priority is given to files)

7. join builtin commads with non builtin  ✅
8. > temp cat input ✅
9. cat < temp > output | grep src  ✅
10. cat < temp | grep in  | grep ni | cat > output  ✅

17/07/23 Monday
11. exit command inside multipe minishell failure  ✅(fixed)
12. echo command not working with($, "", '') ✅(fixed)
13. seg fault on non-command entries ✅(fixed)

18/07/23 Tuesday
14. redirecting output from the beginning, >file cmd args ✅(fixed)
15. signals ✅
16. Norminette parsing ✅

19/07/23
16. Fix Leaks  ✅
17. here_doc  ✅
18. seg fault on redirections and pipe alone  ✅

21/07
19. cat << eof  ✅
20. cat << "eof" or 'eof' 
(should behave as eof, it should ignore any quote) ✅
21. cat << eof  && cat << - eof 
	$PWD (it should print the pwd command, 
		but if delimiter is enclosed 
		with quote it should take as normal str not varible) ✅ 

22. < temp cat  ✅
23. < temp cat | < output grep mi  ✅

24. ///ls //ls
25. \ls (it should run as usual) ✅ 

26. exit $? after  ; daklkd (or anything) = 258 ✅ 
27. echo $0  it should return /bin/bash (shell name) ✅
28. echo "hello's", here single quote should consider as char ✅ 
29. echo "$PWD" => output should be like pwd ✅
30. cat minishell.h | grep ");"$, ✅ 
		=> output (cat: minishell.h: No such file or directory) 
			if the first cmd is error, it should exit.
31. << without cmd should handle_here_doc ✅
32. env | sort | grep -v ^_ (it should exclude all lines beginning with _) ✅
25. \ls (it should run as usual)  ✅
26. exit status  ✅
26. exit return string  ✅
27. Leaks  ✅
35. echo -n ✅


changes:
parser.c
(*command)->name = NULL; added

main.c: cpy = (char **)ft_calloc(sizeof(char *), (len + add + 1)); separeted from if ()

eval sheet 
$> /bin/ls ✅
one space seg fault 

25/July
$? command alone ✅
ctr + D ✅
expnading inside here_doc ✅
expnading inside export 
export with double and single quote 

echo world > hello/ => bash: hello/: Is a directory
cat < hello/ => cat: stdin: Is a directory

Saturday 29
in output redirection, 
	if dir is not available, it should through an error

ls >"./outfiles/outfile""1""2""3""4""5"=> 
		bash: ./outfiles/outfile12345: No such file or directory

CASES AFTER FIRST SUBMISSION 
- commands shouldn't work after unsetting PATH ✅
- commands with relative path should work ✅
- error displayed with quoted arguments should be without quote ✅
- env shouldn't display keys that doesn't have value  ✅

CASES AFTER SECOND SUBMISSION 
-> global variable is to be used only in signals ✅
-> leaks when checking unclosed quote ✅
SIGNALS 
-> multiple tabs going to parser, should be handled at first ✅
-> during  "cat" with control C interrupt - theres an open fd ✅
-> change here doc without command to parent process ✅
-> uninitialized value in here doc ✅
-> during "<<a" there are a few reachable leaks ✅
Note. some signals act differently in docker valgrind and Mac(ctr + \)
-> open fds, valid commands not executed when theres atleast one invalid 
cmd in the command block. Test case is below: 
cat Makefile | ls -la | cat dwefrgthyutgfr | ls
-> cd has a small bug when we try: 
mkdir -p a/b/c 
rm -rf ../../../a
there seems to be a seg fault ✅
-> another seg fault also occurs when we runt this : "ls | ls < | ls" ✅

leaks:
	make && valgrind --suppressions=suppresser.txt \
	--leak-check=full --trace-children=yes \
	--show-leak-kinds=all --track-origins=yes \
	--track-fds=yes ./minishell

push: fclean
	git add .
	git commit -m "Updated on $(shell date +'%Y-%m-%d %H:%M:%S') by $(shell whoami)"
	git push -u origin master